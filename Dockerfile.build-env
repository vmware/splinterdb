# Copyright 2018-2021 VMware, Inc.
# SPDX-License-Identifier: Apache-2.0

# Source for the image
#    projects.registry.vmware.com/splinterdb/build-env
#
# This contains the build-time dependencies for SplinterDB.
#
# To build this image locally:
# $ docker build -t build-env - < Dockerfile.build-env
# To then build SplinterDB itself from souce:
# $ docker run -it --rm --mount type=bind,source="$PWD",target=/splinterdb build-env /bin/bash
#
# This file is maintained separately from the other Dockerfiles
# to reduce build times when the SplinterDB source changes

ARG base_image=library/ubuntu:20.04
FROM $base_image

# Install stuff required to install appropriate compiler versions.
RUN /bin/bash -c ' \
set -euo pipefail; \
export DEBIAN_FRONTEND=noninteractive; \
apt-get update -y && apt-get install -y software-properties-common wget'

# Install clang-13 for Ubuntu 20.04 (Moved to clang-format-13 formatting.)
RUN /bin/bash -c ' \
set -euo pipefail; \
export DEBIAN_FRONTEND=noninteractive; \
wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - \
    && add-apt-repository "deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main" \
    && apt-get install -y clang-13 clang-format-13;'

# Install remaining tools required for builds
RUN /bin/bash -c ' \
set -euo pipefail; \
export DEBIAN_FRONTEND=noninteractive; \
apt-get install -y make libaio-dev libconfig-dev libxxhash-dev gcc lld curl git shellcheck yamllint;'

# shell formatter
ENV SHFMT_VERSION 3.3.1
ADD https://github.com/mvdan/sh/releases/download/v${SHFMT_VERSION}/shfmt_v${SHFMT_VERSION}_linux_amd64 /usr/local/bin/shfmt
RUN /bin/bash -c 'chmod +x /usr/local/bin/shfmt'

# rust
RUN /bin/bash -e -u -o pipefail -c 'curl --proto "=https" --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y'
ENV PATH=/root/.cargo/bin:$PATH
